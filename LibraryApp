pragma solidity ^0.8.0;
contract LibraryApp {
    address public contractOwner;
    constructor() public {
        contractOwner = msg.sender;
    }
    modifier onlyOwner() {
        require(msg.sender == contractOwner);
        _;
    }
    struct Book {
        uint256 shelfid;
        string bookname;
        string owner;
        uint256 value;
    
    }
    mapping(uint256 => Book) public library;
    function addbook(
        uint256 _shelfid,
        string memory _bookname,
        string memory _owner,
        uint256 _value
        
    ) public onlyOwner {
        properties[_bookid].name = _bookname;
        properties[_bookid].owner = _owner;
        properties[_bookid].value = _value;
        
    }
    function queryBookById(uint256 _shelfid)
        public view returns (
            string memory bookname,
            string memory owner,
            uint256 value
        )
    {
        return (
            properties[_bookid].bookname,
            properties[_bookid].owner,
            properties[_bookid].value
        );
    }
    function transferBookOwnership(
        uint256 _shelfid,
        string memory _newOwner) public {
        properties[_shelfid].owner = _newOwner;
    }
}
